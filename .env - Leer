# FWmonitor Einstellungen
# Um Änderungen zu übernehmen muss das Programm neu gestartet werden
# Wenn Einstellungen verwendet werden, muss die # am Anfang der Zeile entfernt werden

#  Raspberry Pi Version = true / false = Windows Modus
RASPIVERSION=false

# FW Haus Koordinaten (LNG = 11.xxxxx, LAT = 47.xxxxxx)
# Optional
#FW_KOORD_LAT=
#FW_KOORD_LNG=


######## API Key´s ########

# Telegram Bot API Key (https://core.telegram.org/bots#3-how-do-i-create-a-bot)
TELEGRAM_BOT_TOKEN=

# Geobing API Key (https://docs.microsoft.com/en-us/bingmaps/getting-started/bing-maps-dev-center-help/getting-a-bing-maps-key)
# Optional
GEOBING_KEY=

# OpenRouteService (https://openrouteservice.org/)
# Optional
ORS_KEY=


######## Programmpfade ########

# Pfad zu Tesseract (Raspberry: siehe 'which tesseract')
TESSERACT_PATH=C:/Program Files/Tesseract-OCR/tesseract.exe

# Pfad zu Ghostscript (Raspberry: siehe 'which ghostscript')
GHOSTSCRIPT_PATH=C:/Program Files/gs/gs9.53.3/bin/gswin64c.exe


######## Alarmeinstellungen ########

# Sende Alarme (true/false)
# Kann zu Testzwechen auf false gesetzt werden
SENDALARM_TELEGRAM=true
SENDALARM_APP=true

# Alarm Anzeigezeit (Minuten)
ALARM_VISIBLE=250

# Suchparameter im Alarmtext
# S ist Starttext, E ist Endtext  (\n = Zeilenende)
# Beispiel "Straße : Beispielstrasse" -> Suche nach "Straße : " und nehme Text bis "\n" (Zeilenende)
#ALARMFIELDS_EINSATZSICHWORT_S=Stichwort :
#ALARMFIELDS_EINSATZSICHWORT_E=\n
#ALARMFIELDS_SCHLAGWORT_S=Schlagw. :
#ALARMFIELDS_SCHLAGWORT_E=\n
#ALARMFIELDS_OBJEKT_S=Objekt :
#ALARMFIELDS_OBJEKT_E=\n
#ALARMFIELDS_BEMERKUNG_S=BEMERKUNG
#ALARMFIELDS_BEMERKUNG_E=EINSATZHINWEIS
#ALARMFIELDS_STRASSE_S=Straße :
#ALARMFIELDS_STRASSE_E=\n
#ALARMFIELDS_ORTSTEIL_S=Ortsteil :
#ALARMFIELDS_ORTSTEIL_E=\n
#ALARMFIELDS_ORT_S=Gemeinde :
#ALARMFIELDS_ORT_E=\n
#ALARMFIELDS_EINSATZMITTEL_S=EINSATZMITTEL
#ALARMFIELDS_EINSATZMITTEL_E=BEMERKUNG
#ALARMFIELDS_EINSATZMITTEL_ZEILE_S=Name :
#ALARMFIELDS_EINSATZMITTEL_ZEILE_E=\n

# Textersetzung  https://regexr.com/
# REGEX1|REGEX2|REGEX3 ...
#ALARM_REPLACE_REGEX=8aum|Ha11e
# ERSETZUNG1|ERSETZUNG2<ERSETZUNG3 ...
#ALARM_REPLACE_TEXT=Baum|Halle

# Filter für die Erkennung eigener Einsatzmittel
ALARMFIELDS_FW_NAME=Feuerwehr Name 

# Filter für die Erkennung Kombialarm bei keinen eigenen Einsatzmitteln
#ALARMFIELDS_KOMBI_FW_NAME=Kombifeuerwehr Name 


######## EMAIL ALARMEINGANG ########

# Alarmeingang  (true/false)
ALARM_IN_EMAIL=false

# Betreff-Filter (kann leer bleiben)
FILTER_EMAIL_BETREFF=

# Regex Inhalt-Filter (leer = kein Filter) (Groß/Kleinschreibung egal) https://regexr.com/
FILTER_EMAIL_INHALT=

# Emailadresse
ALARM_IN_EMAIL_ADRESSE=

# Emailpasswort
ALARM_IN_EMAIL_PASSWORT=

# Emailhost
# Bei Gmail muss diese Einstellung getätigt werden: https://www.google.com/settings/security/lesssecureapps
ALARM_IN_EMAIL_HOST=imap.gmail.com

# Email Port
ALARM_IN_EMAIL_PORT=993

# TLS Servername (wird anscheinend bei Gmail gebrauch = Emailhost, sonst freilassen)
ALARM_IN_EMAIL_SERVERNAME=imap.gmail.com


######## FAX/Datei ALARM ########

# Datei Eingang Verzögerung bis zur Verarbeitung (sek) (evtl bei Hylafax nötig ca. 30 ??)
# Optional
#ALARM_FILE_DELAY_IN=0

# Regex Textfilter (Groß/Kleinschreibung egal) https://regexr.com/
# Optional
#ALARM_FILE_TEXTFILTER=

# Datei-Eingangsordner (Unter Windows: z.B. Fritzbox Fax-Netzwerklaufwerk; Raspberry: z.B. Faxordner Hylafax)
# lokaler Pfad z.B. C:/ordner/ordner/
# bei Netzwerk z.B. \\netzwerkpc\ordner\
# Raspberry z.B. /var/spool/hylafax/recvq/
# Optional
#ALARM_FILE_FOLDER_IN=C:\Eingang

# Ghostskript Auflösung
# Mit der Auflösung kann für bessere Ergebnisse experimentiert werden
#GHOSTSCRIPT_RESOLUTION=600x600


######## ORDNER ########

# Archiv Ordner
# lokaler Pfad z.B. C:/ordner/ordner/
# bei Netzwerk z.B. \\netzwerkpc\ordner\
# Raspberry z.B. /home/pi/FWmonitor/filesArchive/
# Optional (Standard ist ./filesArchive)
#FOLDER_ARCHIVE=C:\Archiv


######## STANDBY Bildschirm ########

# DWD Warncellid (https://www.dwd.de/DE/leistungen/opendata/help/warnungen/cap_warncellids_csv.csv)
# Optional
DWD_WARCELLID=

# DWD Warnungen Standardposition - Posiion (0=links, 2=rechts)
SCREEN_DWD_POS=0

# Kalender Standardposition - Posiion (0=links, 2=rechts)
SCREEN_CALENDAR_POS=2

# Für Anzeige bei Standby
FW_NAME_LONG=Freiwillige Feuerwehr Name

# Für Anzeige bei Bot / APP -> Korzer Name
FW_NAME_SHORT=FF Name

# Diashow Wechselzeit (Millisekunden)
DIASHOW_DELAY=15000

# Zeige Verfügbarkeit im Standby
SCREEN_VERF=false
SCREEN_NVERF=true


######## STANDBY Bildschirm / Google Kalender ########

# Kalender (ICAL Link) (https://support.google.com/calendar/answer/37648?hl=de)
# Unter Einstellungen, Betreffenden Kalender auswählen, "Privatadresse im iCal-Format" kopieren
# Terminnamen Format: "🚒 Hauptübung {{alle}}" (EMOJI NAME {{GRUPPE1}} {{GRUPPE2}} ...)
# eingetragene Terminerinnerungen werden durch den Bot/App versendet
# leer = kein ICAL Kalender -> nur APP Kalender
#ICAL_LINK=


######## FWVV Anbindung ########

# FWVV FWVVDAT Ordner
# lokaler Pfad C:/ordner/ordner/
# bei Netzwerk \\netzwerkpc\ordner\
# Optional
#FWVV_DAT_FOLDER=


######## DRUCKEN ########

# Orginal-Fax drucken (true/false)
PRINT_FAX_ORIGINAL=false

# Orginal-Email drucken (true/false)
PRINT_EMAIL_ORIGINAL=false

# Seitenzahl Orginal
PRINT_FAX_ORIGINAL_PAGES=1

# Ausdruck Alarm mit Karte (0 = AUS)
PRINT_ALARM_PAGES=0

# Version A:  Alarmdrucker URL (siehe verfügbare Drucker bei Programmstart) (funktioniert nicht mit jedem Drucker)
#PRINT_IPP_URL=

# Version B:
# RASPBERRY: Alarmdrucker Name
#PRINT_PRINTERNAME=

# WINDOWS: Pfad zu Foxit Reader (Es wird auf dem Standard-Drucker gedruckt)
# lokaler Pfad C:/ordner/ordner/
#READER_PATH=C:/Program Files (x86)/Foxit Software/Foxit Reader/FoxitReader.exe


######## PAPIERÜBERWACHUNG ########

# Immer aktiv bei Alarmdruck Version A, funktioniert nur nicht in 100% bei allen Druckern

# Alternative Möglichkeit (auch gleichzeitig möglich):

# Internetseite des Druckers, auf der der Papierlevel angezeigt wird
# (Bsp: http://192.168.2.33/start/papier.html)
#PAPER_PRINTER_PATH=

# Regex Filter für Papier wenn nicht leer https://regexr.com/
# Herauszufinden über: Seite im Browser aufrufen -> Quelltext anzeigen -> Stelle mit Papierlevel finden
# Filter erstellen, welcher alle "nicht leeren" Texte enthält
# Beispiel: CassLevel[1] = "Nicht Leer";
#PAPER_PRINTER_REGEX=


######## APP ########

# VAPID Keys für App Benachrichtigungen (Konsolenkommando: "./node_modules/.bin/web-push generate-vapid-keys")
# Optional
#VAPID_PUBLIC=
#VAPID_PRIVATE=
# Admin Email
#VAPID_EMAIL=

# DynDns Adresse / MyFritz Adresse (Bsp. www.app.feuerwehr.de, einsatzpc.erbivuervhie.myfritz.net, ...)
# Optional
#APP_DNS=

## SSL Zertifikat
# lokaler Pfad C:/ordner/ordner/datei.pem
# Wenn APP Funktion über das Web verwendet wird siehe Readme.md
# Wenn APP Funktion nur im LAN für Einstellungen verwendet wird, kann ein selbst signiertes Zertifikat verwendet werden 
# (siehe https://www.selfsignedcertificate.com/ ; Einfach 'localhost' oder die IP des PCs eintragen) 
#SSL_KEY=zertifikat-key.key
#SSL_CERT=zertifikat-cert.crt
